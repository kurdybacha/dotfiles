#!/bin/bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

enable_color_support() {


    if [[ $COLORTERM == gnome-* && $TERM == xterm ]] \
        && infocmp gnome-256color &> /dev/null; then
        export TERM="gnome-256color"
    elif infocmp xterm-256color &> /dev/null; then
        export TERM="xterm-256color"
    fi

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Load OS specific color support

    # Set LS_COLORS (GNU)
    #
    #  - `ls` displays colors if the `--color` option is passed
    #
    #  - the actual colors are configured through the `LS_COLORS`
    #    environment variable (built-in defaults are used if this
    #    variable is not set)
    
    LS_COLORS=""
    
    LS_COLORS+="no=0;39:"   # global default
    LS_COLORS+="di=0;36:"   # directory
    LS_COLORS+="ex=0;32:"   # executable file
    LS_COLORS+="fi=0;39:"   # file
    LS_COLORS+="ec=:"       # non-filename text
    LS_COLORS+="mi=1;31:"   # non-existent file pointed to by a symlink
    LS_COLORS+="ln=target:" # symbolic link
    LS_COLORS+="or=31;01"   # symbolic link pointing to a non-existent file
    
    export LS_COLORS
    
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    
    # Enable color support

    # If set, the pattern "**" used in a pathname expansion context will
    # match all files and zero or more directories and subdirectories.
    #shopt -s globstar
    
    # make less more friendly for non-text input files, see lesspipe(1)
    [ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
    
    # set variable identifying the chroot you work in (used in the prompt below)
    if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
        debian_chroot=$(cat /etc/debian_chroot)
    fi

    # set a fancy prompt (non-color, unless we know we "want" color)
    case "$TERM" in
        xterm-color|*-256color) color_prompt=yes;;
    esac
    
    # uncomment for a colored prompt, if the terminal has the capability; turned
    # off by default to not distract the user: the focus in a terminal window
    # should be on the output of commands, not on the prompt
    #force_color_prompt=yes
    
    if [ -n "$force_color_prompt" ]; then
        if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    	# We have color support; assume it's compliant with Ecma-48
    	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    	# a case would tend to support setf rather than setaf.)
    	color_prompt=yes
        else
    	color_prompt=
        fi
    fi
    
    if [ "$color_prompt" = yes ]; then
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    else
        PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    fi
    unset color_prompt force_color_prompt
    
    if [ -x /usr/bin/dircolors ]; then
    
        if test -r ~/.dircolors; then
            eval "$(dircolors -b ~/.dircolors)"
        else
            eval "$(dircolors -b)"
        fi
    
        alias dir="dir --color=auto"
        alias egrep="egrep --color=auto"
        alias fgrep="fgrep --color=auto"
        alias grep="grep --color=auto"
        alias ls="ls --color=auto"
        alias vdir="vdir --color=auto"
    
    fi
}

main() {
    enable_color_support
}

main

# Cleanup

unset -f enable_color_support
unset -f main
